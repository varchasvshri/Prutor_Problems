Gru frequently needs to use his old Nokia cell phone for texting whose keypad looks exactly as shown below.



enter image description here



You may be already familiar with the working of the keypad, however, if you're not we shall see a few examples.



To type "b", we need to press "2" twice. To type "?" we need to press "1" thrice. To type "5" we need to press "5" four times. To type "0" we need to press "0" twice.



I hope that it's clear how the keypad is being used.



Now Gru has a lot of text messages and they are pretty lengthy. So he devised a mechanical-hand-robot (with only 1 finger) which does the typing job.



Gru needs to provide an input code upon which the robot works. 



Suppose for word 'hack', for letter h Gru needs to provide input 44 to the robot followed by a space to make space for the next letter. The required input given to the robot for the word 'hack' will be 44 2 222 55. Notice no trailing space has been left after 55.



Although Gru is a great scientist he needs your help in writing down the required code.



Input:

First line contains T - number of test cases.

Each of the next T lines contains a string S - the message Gru needs to send.

Each string is terminated by a newline escape sequence \n.



Output:

For each test case output the time taken by the hand-robot to type down the message.



Constraints:

1 = T = 50

1 = |S| = 1000 , where |S| denotes the length of string S

String is made of all the characters shown in the image above which are as follows:

"." (period), "," (comma), "?" (question mark), "!" (exclamation mark), [a-z] (small case english alphabets), "_" (underscore) and [0-9] (digits)



Note: We are using "_" underscore instead of " " empty space to avoid confusion



SAMPLE INPUT



 



3
hack
5!
i_?_u



SAMPLE OUTPUT



 



44 2 222 55
5555 1111
444 0 111 0 88

Primary Solution Code editor
#include <stdio.h>
#include <string.h>

int num_let(char x)
{
    if     (x=='.'||x==','||x=='?'||x=='!'||x=='1')return 1;
else if(x=='a'||x=='b'||x=='c'||x=='2')        return 2;
else if(x=='d'||x=='e'||x=='f'||x=='3')        return 3;
else if(x=='g'||x=='h'||x=='i'||x=='4')        return 4;
else if(x=='j'||x=='k'||x=='l'||x=='5')        return 5;
else if(x=='m'||x=='n'||x=='o'||x=='6')   	   return 6;
else if(x=='p'||x=='q'||x=='r'||x=='s'||x=='7')return 7;
else if(x=='t'||x=='u'||x=='v'||x=='8')   	   return 8;
else if(x=='w'||x=='x'||x=='y'||x=='z'||x=='9')return 9;
else if(x=='_'||x=='0')                 	   return 0;
else return -1;
}

int num_type(char x)
{
    if     (x=='.'||x=='a'||x=='d'||x=='g'||x=='j'||x=='m'||x=='p'||x=='t'||x=='w'||x=='_')return 1;
else if(x=='0'||x==','||x=='b'||x=='e'||x=='h'||x=='k'||x=='n'||x=='q'||x=='u'||x=='x'||x=='0')  return 2;
else if(x=='?'||x=='c'||x=='f'||x=='i'||x=='l'||x=='o'||x=='s'||x=='v'||x=='y') return 3;
else if(x=='2'||x=='3'||x=='4'||x=='5'||x=='6'||x=='8'||x=='!'||x=='s'||x=='z') return 4;
else if(x=='1'||x=='7'||x=='9') return 5;
else return -1;
}

void print_it(char x)
{
    int i,num = num_let(x);
    int loop = num_type(x);
    for(i=0;i<loop;i++) printf("%d",num);
}

int main()
{ 
    int i,j,T;
    scanf("%d",&T);
    char str[50][1000];
    for(i=0;i<T;i++)
    {
        scanf("%s",str[i]);
        int len = strlen(str[i]);
        for(j=0;j<len-1;j++) {print_it(str[i][j]);printf(" ");}
        print_it(str[i][j]);printf("\n");
    }
    return 0;
}